name: Build and Push Docker image

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-cache-${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-cache-${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run user tests
        run: npm test

  build:
    needs: test  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKERHUB_USERNAME }}"/frontend-blogpost:latest .

      - name: Push Docker image
        run: docker push "${{ secrets.DOCKERHUB_USERNAME }}"/frontend-blogpost:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest

    
    steps:
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: SSH into VPN Server using password
      run: |
        sshpass -p '${{ secrets.VM_VPN_PASS }}' ssh -o StrictHostKeyChecking=no "${{ secrets.VM_VPN }}" "
        #retirar o ssh para a vpn
       
          sshpass -p '${{ secrets.VM_FRONT_PASS }}' ssh -o StrictHostKeyChecking=no "${{ secrets.VM_FRONT }}" '

            cd "${{ secrets.VM_PATH }}"
            
            git pull
            
            npm run build
          '
        "


