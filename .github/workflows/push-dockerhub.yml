on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  
  GKE_CLUSTER: cluster-dev 
  GKE_ZONE: us-central1  
  DEPLOYMENT_NAME: blog-frontend  
  IMAGE: frontend-blogpost 

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: env create
        run: echo "${{ secrets.ENV }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-blogpost:latest

  deploy-to-gke:
    needs: build-and-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuração do Google Cloud e autenticação com a chave da conta de serviço
      - name: Set up Google Cloud credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}  # Chave da conta de serviço
          project_id: ${{ secrets.GCP_PROJECT_ID }}  # ID do seu projeto

      # Configure Docker para usar gcloud como helper de autenticação
      - name: Configure Docker to use gcloud
        run: |
          gcloud --quiet auth configure-docker

      # Obter credenciais do GKE para o cluster
      - uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}  # Passando o project_id corretamente

      # Build da imagem Docker
      - name: Build Docker image
        run: |
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Publicar a imagem Docker no Google Container Registry
      - name: Publish Docker image to GCR
        run: |
          docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

      # Deploy da imagem Docker no GKE
      - name: Deploy to GKE
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME frontend=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA --record
          kubectl rollout status deployment/$DEPLOYMENT_NAME

      # Verificação do status do deployment
      - name: Verify the deployment
        run: |
          kubectl get services -o wide
