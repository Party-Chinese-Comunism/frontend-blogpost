on:
  push:
    branches:
      - main
      - develop

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT }}
  GKE_CLUSTER: your-cluster-name
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: blog-frontend
  IMAGE: front

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref }}
    
    steps:
      # Checkout do código
      - name: Checkout Code
        uses: actions/checkout@v2

      # Configuração do Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Autenticação com Google Cloud (método igual ao outro exemplo)
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT }}
          credentials_json: '${{ secrets.GKE_SECRET }}'
          install_components: 'gke-gcloud-auth-plugin'

      # Instalação do gke-gcloud-auth-plugin (necessário para a autenticação com GKE)
      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
            sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
            sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      # Construção e push da imagem Docker
      - name: Build Docker Image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA} .
          docker push us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA}

      # Deploy no Kubernetes (GKE)
      - name: Deploy to Kubernetes
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            gcloud container clusters get-credentials production --zone us-central1 --project ${{ secrets.GCLOUD_PROJECT }}
            
            kubectl config use-context gke_${{ secrets.GCLOUD_PROJECT }}_us-central1_production
            kubectl set image deployment/blog-frontend blog-frontend=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA}
          elif [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            gcloud container clusters get-credentials stage --zone us-central1 --project ${{ secrets.GCLOUD_PROJECT }}
            
            kubectl config use-context gke_${{ secrets.GCLOUD_PROJECT }}_us-central1_stage
            kubectl set image deployment/blog-frontend blog-frontend=us-central1-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/front/front:${GITHUB_SHA}
          fi
